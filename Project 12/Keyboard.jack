// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array keyboard;

    /** Initializes the keyboard. */
    function void init() {
	// keyboard address
	let keyboard = 24576;
	return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
	return keyboard[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
	var char key;
	// Waits for the user to enter a key.
	while (Keyboard.keyPressed() = 0) {
	    let key = Keyboard.keyPressed();
	}
	// Waits for the user to release said key.
	while (~(Keyboard.keyPressed() = 0)) { }
	// Prints the char and returns it as well.
	do Output.printChar(key);
	return key;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
	var String nextLine;
	var char newChar;

	// Prints the message and then sets a string length of 100 to be entered.
	do Output.printString(message);
	let nextLine = String.new(100);
	let newChar = Keyboard.readChar();
	
	// Loop for string input.
	while (~(newChar = String.newLine())) {
	    // if the user enters a backspace, erases the last char.
	    if (newChar = String.backSpace() ) {
		do newLine.eraseLastChar();
	    }
	    // otherwise, add the char to the string.
	    else {
		do line.appendChar(newChar);
	    }
	    let newChar = Keyboard.readChar();
	}
	// Once string has been entered, returns the string.
	return nextLine;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
	var String newLine;
	
	// calls prior function and then returns the int value of said message.
	let newLine = Keyboard.readLine(message);
	return newLine.intValue();
    }
}
